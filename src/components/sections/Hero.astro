---
import { basics } from "@cv"
import Section from "@/components/Section.astro"
import Mail from "@/icons/Mail.astro"
import Phone from "@/icons/Phone.astro"
import X from "@/icons/X.astro"
import LinkedIn from "@/icons/LinkedIn.astro"
import GitHub from "@/icons/GitHub.astro"
import WorldMap from "@/icons/WorldMap.astro"
import type { SocialIcon } from "@/types"

const { name, label, image, location, profiles, phone, email } = basics
const { city, region } = location

const SOCIAL_ICONS: SocialIcon = { GitHub, LinkedIn, X }

const linkedInfo = profiles.find(({ network }) => network === "LinkedIn")
const linkedUrl = linkedInfo?.url
const printInfo = [email, phone, linkedUrl].filter(Boolean).join(" â€¢ ")

// ---------- URL de imagen desde `public/` respetando el base ----------
const raw = (image ?? "").toString()

function withBase(path: string) {
  // base puede venir como "/portfolio" (sin slash final)
  const base = import.meta.env.BASE_URL.endsWith("/")
    ? import.meta.env.BASE_URL
    : `${import.meta.env.BASE_URL}/`
  // quitamos cualquier "/" inicial del path
  const clean = path.replace(/^\/+/, "")
  return `${base}${clean}`
}

const isAbsolute = /^https?:\/\//i.test(raw)
const isAlreadyBase = raw.startsWith(import.meta.env.BASE_URL)
const imgSrc = isAbsolute || isAlreadyBase ? raw : withBase(raw)
---

<Section>
  <div class="container">
    <div class="info">
      <h1>{name}</h1>
      <h2>{label}</h2>

      <span>
        <WorldMap />
        {city}, {region}
      </span>

      <footer class="print">{printInfo}</footer>

      <footer class="no-print">
        {email && (
          <a href={`mailto:${email}`} title={`Enviar un correo a ${name}`} target="_blank" rel="noopener noreferrer">
            <Mail />
          </a>
        )}
        {phone && (
          <a href={`tel:${phone}`} title={`Llamar a ${name}`} target="_blank" rel="noopener noreferrer">
            <Phone />
          </a>
        )}
        {profiles.map(({ network, url }) => {
          const Icon = SOCIAL_ICONS[network]
          return (
            <a href={url} title={`Visitar el perfil de ${name} en ${network}`} target="_blank" rel="noopener noreferrer">
              <Icon />
            </a>
          )
        })}
      </footer>
    </div>

    <figure>
      <img src={imgSrc} alt={name} />
    </figure>
  </div>
</Section>

<style>
  .container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
  }
  .info { display: flex; flex-direction: column; gap: .5rem; padding-right: 32px; }
  h1 { font-size: 2rem; }
  h2 { color: #444; font-weight: 500; font-size: 1.1rem; text-wrap: balance; }

  img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 328px;
    border-radius: 16px;
  }

  span { color: #666; display: flex; align-items: center; gap: .25rem; font-size: .85rem; letter-spacing: -0.05rem; }
  footer { color: #555; font-size: .65rem; display: flex; gap: 4px; margin-top: 8px; }
  footer a { color: #777; display: inline-flex; align-items: center; justify-content: center; border: 1px solid #eee; padding: 4px; height: 32px; width: 32px; border-radius: 6px; transition: all .3s ease; }
  footer a:hover { background: #eee; border: 1px solid #ddd; }

  @media (width <= 700px) {
    .container { flex-direction: column-reverse; }
    .info { justify-content: center; align-items: center; padding-right: 0; text-align: center; }
    figure { display: flex; justify-content: center; align-items: center; margin: 0 auto; }
  }
</style>
